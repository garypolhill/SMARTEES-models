to Schedule-Meetings
  Make-Meetings-Manager
end

;<summary>
;Map a meeting row in a mensual meeting format
;row, is the row of the meeting file, which contains the parameters of a meeting
;</summary>
to-report Make-Meeting-List [row]
  let starting-year item 1 row
  let ending-year item 3 row
  let months 0
  let years 0
  ifelse starting-year  > ending-year[
    print("The meeting table is wrong: ending year must be equal to or greater than starting year")
  ][
    ;years that the strategy lasts
    set years ending-year - starting-year
  ]
  let ending-month item 2 row + (years * 12) ;ending month is ending-month + years in months
  ;meeting duration in months
  let duration ending-month - item 0 row ;ending-month - starting-month
  
  ;current-mont starts in the starting-month
  let current-month item 0 row
  ;new strategy row
  let newrow []
  ;make a new strategy row for every month of the original strategy
  while [current-month <= ending-month][
    let new-starting-year starting-year + floor (current-month / 12)
    let new-starting-month (current-month mod 12)
    ;fix problem with the 12 mod 12 situation
    if new-starting-month = 0 [
      ;if new-stating-month = 0 in fact is the 12ยบ month
      set new-starting-month 12
      ;and there is not new year yet!
      set new-starting-year new-starting-year - 1
    ]
    ;make the new row with the original values and the new stating month/year
    set newrow (list (new-starting-month) (new-starting-year) (item 4 row)  (item 5 row) (item 6 row))
    ;add the new row to the list  starting-month starting-year frecuency section
    set meetings-list lput newrow meetings-list
    ;increment loop
    set current-month current-month + 1
  ]
  report meetings-list
end
;<summary>
;create the strategy-manager
;</summary>
to Make-Meetings-Manager
  create-meetings-managers 1
  ask meetings-managers[
    hide-turtle
    set meetings-list []
    ;read the meetings file
    file-open "scenario2.csv"
    ;ignore first row
    let row (csv:from-row file-read-line ";")
    while [ not file-at-end? ] [
      set row (csv:from-row file-read-line ";")
      show(row)
      ;map a meeting file row to a more simple representation
      set meetings-list Make-Meeting-List row
    ]
    file-close
    show meetings-list
  ]
end




to Schedule-Campaings
  Make-Campaings-Manager
end

to Make-Campaings-Manager
  create-campaings-managers 1
  ask campaings-managers[
    hide-turtle
    set campaings-list []
    ;read the meetings file
    file-open "scenario2.csv"
    ;ignore first row
    let row (csv:from-row file-read-line ";")
    while [ not file-at-end? ] [
      set row (csv:from-row file-read-line ";")
      show(row)
      ;map a meeting file row to a more simple representation
      let focus-list Split item 9 row
      set campaings-list Make-Campaing-List row focus-list
    ]
    file-close
    show campaings-list
  ]
end

to-report Make-Campaing-List[row focus-list]
  let starting-year item 3 row
  let ending-year item 5 row
  let months 0
  let years 0

  ifelse starting-year  > ending-year[
    print("The strategy table is wrong: ending year must be equal to or greater than starting year")
  ][
    ;years that the strategy lasts
    set years ending-year - starting-year
  ]
  let ending-month item 4 row + (years * 12) ;ending month is ending-month + years in months
  ;strategy duration in months
  let duration ending-month - item 2 row ;ending-month - starting-month
  
  ;current-mont starts in the starting-month
  let current-month item 2 row
  ;new strategy row
  let newrow []
  ;make a new strategy row for every month of the original strategy
  while [current-month <= ending-month][
    let new-starting-year starting-year + floor (current-month / 12)
    let new-starting-month (current-month mod 12)
    ;fix problem with the 12 mod 12 situation
    if new-starting-month = 0 [
      ;if new-stating-month = 0 in fact is the 12ยบ month
      set new-starting-month 12
      ;and there is not new year yet!
      set new-starting-year new-starting-year - 1
    ]
    ;make the new row with the original values and the new stating month/year
    set newrow (list (item 0 row) (item 1 row) (new-starting-month) (new-starting-year) (item 6 row)  (item 7 row) (item 8 row) focus-list)
    ;add the new row to the list  critical-node-name behavior starting-month starting-year frecuency reach secondary-critical-node-name
    set campaings-list lput newrow campaings-list
    ;increment loop
    set current-month current-month + 1
  ]
  report campaings-list
end

to Campaings
  ask campaings-managers[
    ;check if any trigger has been fired
    let i 0
    foreach campaings-list[
      campaing -> if (item 2 campaing) = month [
        if item 3 campaing = year [
          ;sections
          Run-Campaing item 0 campaing item 1 campaing item 5 campaing  item 6 campaing item 7 campaing
          output-print (word ("Campaing Organizer:") (item 0 campaing) (" ") ("Date:") (item 2 campaing) "/" (item 3 campaing) (" ") ("Role:" ) (item 1 campaing) )
          output-print ("----------------------------------------------------------------------------------------------------------------------------------")
          if item 4 campaing = 1[
            set campaings-list remove-item i campaings-list 
            set i (i - 1)
          ]
        ]
      ]
      set i (i + 1)
    ]
  ]
end

to Run-Campaing[node opinion reach secondary-node-name focus]
  ;select the critical node performing the communication
  let current-critical-node one-of critical-nodes with [node-type = secondary-node-name]
  if current-critical-node = nobody [show (secondary-node-name)]
  ask current-critical-node[
    let target-humats sort n-of round(reach * scope) my-out-links
    foreach target-humats [ target-humat -> Critical-Node-Campaing [other-end] of target-humat node opinion focus]
  ]
end


to Critical-Node-Campaing [target-humat node opinion focus]
  ask target-humat [    
    ;critical node "satisfaction"
    let importance  0
    
    ifelse opinion = "supporter" [
      set importance   1
    ][
      set importance  -1
    ]

    ;select trust of the primary node  
    let trust-type-value [trust-type] of myself
    let current-trust 0
    ifelse trust-type-value = "council"[
      set current-trust city-council-trust
    ][
      ifelse trust-type-value = "merchant"[
        set current-trust merchants-associations-trust
      ][
        ifelse trust-type-value = "associations" [
          set current-trust other-associations-trust
        ][
          set current-trust local-media-trust
        ]
      ]
    ]
    let signaling-persuasion current-trust * 0.2
    ; seting new experiential and values satisfaction
    ;signaling-humat satisfaction, trust in critical node, critical node satisfaction  
    foreach focus [ focus-need ->
      if  member? focus-need ["wellness" "all"][
        set wellness-importance New-Need-Satisfaction wellness-importance signaling-persuasion importance
      ]
      if  member? focus-need ["environmental-quality" "all"][
        set environmental-quality-importance New-Need-Satisfaction environmental-quality-importance signaling-persuasion importance
      ]
      if  member? focus-need ["comfort" "all"][
        set comfort-importance New-Need-Satisfaction comfort-importance signaling-persuasion importance
      ]
      if  member? focus-need ["prestige" "all"][
        set prestige-importance New-Need-Satisfaction prestige-importance signaling-persuasion importance
      ]
      if  member? focus-need ["participation" "all"][
        set participation-importance New-Need-Satisfaction participation-importance signaling-persuasion importance   
      ]
    ]
    
    ;update behaviour decision
    Update-Evaluations
    Update-Dissonances
    Choose-Behaviour
    Update-Evaluations
    Update-Dissonances
  ] 
end

to Event-Scenario-1
  if month = 1 and year = 2009 and scenario1-event = 0 [
    set scenario1-event  1
    show("INICIO EVENTO ESCENARIO")
    output-print (word ("Event-Scenario1"))
    output-print ("----------------------------------------------------------------------------------------------------------------------------------")
    ask humats[
      ifelse comfort-importance >= 0.4 and comfort-importance <= 0.6 [
        set local-media-trust local-media-trust * ( 1 - trust-reduction-scenario1)
        set merchants-associations-trust  merchants-associations-trust * ( 1 - trust-reduction-scenario1)
        set other-associations-trust other-associations-trust * ( 1 - trust-reduction-scenario1)
      ][
        if comfort-importance >= 0.8 [
          set local-media-trust local-media-trust + (local-media-trust * trust-reduction-scenario1)
          if local-media-trust > 1 [ set local-media-trust  1]
          set merchants-associations-trust merchants-associations-trust +  (merchants-associations-trust * trust-reduction-scenario1)
          if merchants-associations-trust > 1 [ set merchants-associations-trust  1]
          set other-associations-trust other-associations-trust + (other-associations-trust * trust-reduction-scenario1)
          if other-associations-trust > 1 [ set other-associations-trust  1]
        ]
      
      ] 
    ]
  ]
  if month = 6 and year = 2010 and scenario1-event = 1 [
    set scenario1-event  0
    show("FIN EVENTO ESCENARIO")
    ask humats[
      set local-media-trust original-local-media-trust 
      set merchants-associations-trust original-merchants-associations-trust 
      set other-associations-trust original-other-associations-trust 
    ]
  ]
end

to Event-Scenario-3
  ;Pacto por la movilidad ciudadana
  if month = 7 and year = 2006 and scenario3-event1 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  if month = 10 and year = 2006 and scenario3-event1 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  if month = 9 and year = 2006 and scenario3-event1 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  if month = 8 and year = 2006 and scenario3-event1 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  if month = 7 and year = 2006 and scenario3-event1 = 0 [
    set scenario3-event1  1
    set scenario3-comm-prob-late scenario3-comm-prob
    Run-Meetings ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  ;OTA
  if month = 9 and year = 2009 and scenario3-event3 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901030" "0105901029" "0105901025" "0105901027" "0105901026" "0105903001" "0105903023" "0105901021" "0105901019" "0105901023" "0105901004" "0105901003" "0105901005" "0105901008" "0105903025" "0105903026" "0105902006" "0105902005" "0105901001" "0105901010" "0105902003" "0105902001" "0105901012" "0105901014" "0105901017" "0105901013" "0105901015" "0105901018" "0105904001" "0105904002" "0105904004" "0105904008" "0105904009" "0105904007" "0105901018" "0105901016" "0105904003" "0105901009" "0105901011" "0105901002" "0105901020" "0105901022" "0105901024" "0105901028" "0105903024" "0105901007"]
  ]
  if month = 8 and year = 2009 and scenario3-event3 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901030" "0105901029" "0105901025" "0105901027" "0105901026" "0105903001" "0105903023" "0105901021" "0105901019" "0105901023" "0105901004" "0105901003" "0105901005" "0105901008" "0105903025" "0105903026" "0105902006" "0105902005" "0105901001" "0105901010" "0105902003" "0105902001" "0105901012" "0105901014" "0105901017" "0105901013" "0105901015" "0105901018" "0105904001" "0105904002" "0105904004" "0105904008" "0105904009" "0105904007" "0105901018" "0105901016" "0105904003" "0105901009" "0105901011" "0105901002" "0105901020" "0105901022" "0105901024" "0105901028" "0105903024" "0105901007"]
  ]
  if month = 7 and year = 2009 and scenario3-event3 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901030" "0105901029" "0105901025" "0105901027" "0105901026" "0105903001" "0105903023" "0105901021" "0105901019" "0105901023" "0105901004" "0105901003" "0105901005" "0105901008" "0105903025" "0105903026" "0105902006" "0105902005" "0105901001" "0105901010" "0105902003" "0105902001" "0105901012" "0105901014" "0105901017" "0105901013" "0105901015" "0105901018" "0105904001" "0105904002" "0105904004" "0105904008" "0105904009" "0105904007" "0105901018" "0105901016" "0105904003" "0105901009" "0105901011" "0105901002" "0105901020" "0105901022" "0105901024" "0105901028" "0105903024" "0105901007"]
  ]
  if month = 6 and year = 2009 and scenario3-event3 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901030" "0105901029" "0105901025" "0105901027" "0105901026" "0105903001" "0105903023" "0105901021" "0105901019" "0105901023" "0105901004" "0105901003" "0105901005" "0105901008" "0105903025" "0105903026" "0105902006" "0105902005" "0105901001" "0105901010" "0105902003" "0105902001" "0105901012" "0105901014" "0105901017" "0105901013" "0105901015" "0105901018" "0105904001" "0105904002" "0105904004" "0105904008" "0105904009" "0105904007" "0105901018" "0105901016" "0105904003" "0105901009" "0105901011" "0105901002" "0105901020" "0105901022" "0105901024" "0105901028" "0105903024" "0105901007"]
  ]
  if month = 6 and year = 2009 and scenario3-event3 = 0 [
    set scenario3-event3  1
    set scenario3-comm-prob-late scenario3-comm-prob
    Run-Meetings ["0105901030" "0105901029" "0105901025" "0105901027" "0105901026" "0105903001" "0105903023" "0105901021" "0105901019" "0105901023" "0105901004" "0105901003" "0105901005" "0105901008" "0105903025" "0105903026" "0105902006" "0105902005" "0105901001" "0105901010" "0105902003" "0105902001" "0105901012" "0105901014" "0105901017" "0105901013" "0105901015" "0105901018" "0105904001" "0105904002" "0105904004" "0105904008" "0105904009" "0105904007" "0105901018" "0105901016" "0105904003" "0105901009" "0105901011" "0105901002" "0105901020" "0105901022" "0105901024" "0105901028" "0105903024" "0105901007"]
  ]
  
  if month = 4 and year = 2012 and scenario3-event2 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  
  if month = 3 and year = 2012 and scenario3-event2 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  
  if month = 2 and year = 2012 and scenario3-event2 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  
  if month = 1 and year = 2012 and scenario3-event2 = 1 [
    set scenario3-comm-prob-late scenario3-comm-prob-late * 0.8
    Meetings-Conclusion ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]
  
  if month = 1 and year = 2012 and scenario3-event2 = 0 [
    set scenario3-event2  1
    set scenario3-comm-prob-late scenario3-comm-prob
    Run-Meetings ["0105901001" "0105901002" "0105901003" "0105901004" "0105901005" "0105901007" "0105901008" "0105901009" "0105901010" "0105901011" "0105901012" "0105901013" "0105901014" "0105901015" "0105901016" "0105901017" "0105901018" "0105901019" "0105901020" "0105901021" "0105901022" "0105901023" "0105901024" "0105901025" "0105901026" "0105901027" "0105901028" "0105901029" "0105901030" "0105901031" "0105901032" "0105901033" "0105901034" "0105901035" "0105901036" "0105901037" "0105901038" "0105901039" "0105902008" "0105902009" "0105902010" "0105902011" "0105902012" "0105902013" "0105902014" "0105902015" "0105902016" "0105902017" "0105902018" "0105902019" "0105902020" "0105902021" "0105902022" "0105902023" "0105902024" "0105902025" "0105902026" "0105902027" "0105902028" "0105902029" "0105902030" "0105902031" "0105902032" "0105902033" "0105902034" "0105902035" "0105902036" "0105902037" "0105902038" "0105902039" "0105902040" "0105902041" "0105902042" "0105902043" "0105902044""0105903001" "0105903002" "0105903003" "0105903004" "0105903005" "0105903006" "0105903007" "0105903008" "0105903009" "0105903010" "0105903011" "0105903012" "0105903013" "0105903014" "0105903015" "0105903016" "0105903017" "0105903018" "0105903019" "0105903020" "0105903021" "0105903022" "0105903023" "0105903024" "0105903025" "0105903026" "0105903027" "0105903028" "0105903029" "0105903030" "0105903031" "0105903032" "0105903033" "0105903034" "0105903035" "0105903036" "0105903037" "0105903039" "0105903038" "0105903040" "0105904001" "0105904002" "0105904003" "0105904004" "0105904005" "0105904006" "0105904014" "0105904015" "0105904016" "0105904017" "0105904018" "0105904019" "0105904020" "0105904021" "0105904022" "0105904023" "0105904024" "0105904025" "0105904026" "0105904027" "0105904028" "0105904029" "0105904030" "0105904031" "0105905001" "0105905002" "0105905003" "0105905004" "0105905005" "0105905006" "0105905007" "0105905008" "0105905009" "0105905010" "0105905011" "0105905012" "0105905013" "0105905014" "0105905015" "0105905016" "0105905017" "0105905018" "0105905019" "0105905020" "0105905021" "0105905022" "0105905023" "0105905024" "0105905025" "0105905026" "0105905027" "0105905028" "0105905029" "0105905030" "0105905031" "0105905032" "0105905033" "0105905034" "0105905035" "0105904007" "0105904008" "0105904009" "0105904010" "0105904011" "0105904012" "0105904013" "0105902001" "0105902002" "0105902003" "0105902004" "0105902005" "0105902006" "0105902007" ]
  ]

end

to Run-Meetings [meeting-sections]
  set plot-highlight 1
  foreach meeting-sections[meeting-section -> 
    ask humats with [section = meeting-section][
      let agentlist sort (other humats with [section = meeting-section])
      foreach agentlist [meeting-humat ->
        if (random-float 1) <= scenario3-comm-prob [
          set meeting-conv meeting-conv + 1
          ask meeting-humat [
            ;get needs evaluations from signaling humat
            let signaling-humat-wellness-evaluation-A [wellness-evaluation-A] of myself
            let signaling-humat-environmental-quality-evaluation-A [environmental-quality-evaluation-A] of myself
            let signaling-humat-comfort-evaluation-A [comfort-evaluation-A] of myself
            let signaling-humat-prestige-evaluation-A [prestige-evaluation-A] of myself
            let signaling-humat-participation-evaluation-A [participation-evaluation-A] of myself
            
            let signaling-humat-wellness-evaluation-B [wellness-evaluation-B] of myself
            let signaling-humat-environmental-quality-evaluation-B [environmental-quality-evaluation-B] of myself
            let signaling-humat-comfort-evaluation-B [comfort-evaluation-B] of myself
            let signaling-humat-prestige-evaluation-B [prestige-evaluation-B] of myself
            let signaling-humat-participation-evaluation-B [participation-evaluation-B] of myself
            
            ;get importances from signaling humat
            let signaling-humat-wellness-importance [wellness-importance] of myself
            let signaling-humat-environmental-quality-importance [environmental-quality-importance] of myself
            let signaling-humat-comfort-importance [comfort-importance] of myself
            let signaling-humat-prestige-importance [prestige-importance] of myself
            let signaling-humat-participation-importance [participation-importance] of myself
            
            ;calculate similarities for alternative A
            let similarity-wellness-importance-A Need-Similarity wellness-evaluation-A signaling-humat-wellness-evaluation-A wellness-importance signaling-humat-wellness-importance
            let similarity-environmental-quality-importance-A Need-Similarity environmental-quality-evaluation-A signaling-humat-environmental-quality-evaluation-A environmental-quality-importance signaling-humat-environmental-quality-importance
            let similarity-comfort-importance-A Need-Similarity comfort-evaluation-A signaling-humat-comfort-evaluation-A comfort-importance signaling-humat-comfort-importance
            let similarity-prestige-importance-A Need-Similarity prestige-evaluation-A signaling-humat-prestige-evaluation-A prestige-importance signaling-humat-prestige-importance
            let similarity-participation-importance-A Need-Similarity participation-evaluation-A signaling-humat-participation-evaluation-A participation-importance signaling-humat-participation-importance
            
            ;calculate similarities for alternative B
            let similarity-wellness-importance-B Need-Similarity wellness-evaluation-B signaling-humat-wellness-evaluation-B wellness-importance signaling-humat-wellness-importance
            let similarity-environmental-quality-importance-B Need-Similarity environmental-quality-evaluation-B signaling-humat-environmental-quality-evaluation-B environmental-quality-importance signaling-humat-environmental-quality-importance
            let similarity-comfort-importance-B Need-Similarity comfort-evaluation-B signaling-humat-comfort-evaluation-B comfort-importance signaling-humat-comfort-importance
            let similarity-prestige-importance-B Need-Similarity prestige-evaluation-B signaling-humat-prestige-evaluation-B prestige-importance signaling-humat-prestige-importance
            let similarity-participation-importance-B Need-Similarity participation-evaluation-B signaling-humat-participation-evaluation-B participation-importance signaling-humat-participation-importance
            
            ;get relative-aspiration
            let rel-aspiration adjacents-trust
            
            ; persuasion is a multiplication of need-similarity and relative-aspiration, and is not symmetric (needs different values for inquiring and signaling)
            let persuasion-wellness-A (similarity-wellness-importance-A * rel-aspiration) 
            let persuasion-environmental-quality-A (similarity-environmental-quality-importance-A * rel-aspiration)
            let persuasion-comfort-A (similarity-comfort-importance-A * rel-aspiration) 
            let persuasion-prestige-A (similarity-prestige-importance-A * rel-aspiration) 
            let persuasion-participation-A (similarity-participation-importance-A * rel-aspiration) 
            
            
            let persuasion-wellness-B (similarity-wellness-importance-B * rel-aspiration) 
            let persuasion-environmental-quality-B (similarity-environmental-quality-importance-B * rel-aspiration)
            let persuasion-comfort-B (similarity-comfort-importance-B * rel-aspiration) 
            let persuasion-prestige-B (similarity-prestige-importance-B * rel-aspiration) 
            let persuasion-participation-B (similarity-participation-importance-B * rel-aspiration) 
            
            ; seting new experiential and values satisfaction
            set wellness-satisfaction-A New-Need-Satisfaction wellness-satisfaction-A persuasion-wellness-A [wellness-satisfaction-A] of myself
            set environmental-quality-satisfaction-A New-Need-Satisfaction environmental-quality-satisfaction-A persuasion-environmental-quality-A [environmental-quality-satisfaction-A] of myself
            set comfort-satisfaction-A New-Need-Satisfaction comfort-satisfaction-A persuasion-comfort-A [comfort-satisfaction-A] of myself
            set prestige-satisfaction-A New-Need-Satisfaction prestige-satisfaction-A persuasion-prestige-A [prestige-satisfaction-A] of myself
            set participation-satisfaction-A New-Need-Satisfaction participation-satisfaction-A persuasion-participation-A [participation-satisfaction-A] of myself
            
            
            set wellness-satisfaction-B New-Need-Satisfaction wellness-satisfaction-B persuasion-wellness-B [wellness-satisfaction-B] of myself
            set environmental-quality-satisfaction-B New-Need-Satisfaction environmental-quality-satisfaction-B persuasion-environmental-quality-B [environmental-quality-satisfaction-B] of myself
            set comfort-satisfaction-B New-Need-Satisfaction comfort-satisfaction-B persuasion-comfort-B [comfort-satisfaction-B] of myself
            set prestige-satisfaction-B New-Need-Satisfaction prestige-satisfaction-B persuasion-prestige-B [prestige-satisfaction-B] of myself
            set participation-satisfaction-B New-Need-Satisfaction participation-satisfaction-B persuasion-participation-B [participation-satisfaction-B] of myself
            
            ;update behaviour decision
            Update-Evaluations
            Update-Dissonances
            Choose-Behaviour
            Update-Evaluations
            Update-Dissonances
            
            ;update link same-ba=?
            ask my-out-links[
              ifelse [behavior] of other-end = [behavior] of myself [set same-ba? 1][set same-ba? 0]
            ]
          ]
          ;update link same-ba?    
          ;update dissonances of signaling humat
          Update-Evaluations
          Update-Dissonances
          Choose-Behaviour
          Update-Evaluations
          Update-Dissonances
          
          ask my-out-links [
            ;update link same-ba?
            ifelse [behavior] of other-end = [behavior] of myself [set same-ba? 1][set same-ba? 0]
          ]
        ] 
        
      ]
    ]   
  ]
end

to Meetings-Conclusion [meeting-sections]
  set plot-highlight 1
  foreach meeting-sections[meeting-section -> 
    ask humats with [section = meeting-section][
      let agentlist sort [other-end] of my-out-links
      foreach agentlist [meeting-humat ->
        if (random-float 1) <= scenario3-comm-prob-late [
          set meeting-conv meeting-conv + 1
          ask meeting-humat [
            ;get needs evaluations from signaling humat
            let signaling-humat-wellness-evaluation-A [wellness-evaluation-A] of myself
            let signaling-humat-environmental-quality-evaluation-A [environmental-quality-evaluation-A] of myself
            let signaling-humat-comfort-evaluation-A [comfort-evaluation-A] of myself
            let signaling-humat-prestige-evaluation-A [prestige-evaluation-A] of myself
            let signaling-humat-participation-evaluation-A [participation-evaluation-A] of myself
            
            let signaling-humat-wellness-evaluation-B [wellness-evaluation-B] of myself
            let signaling-humat-environmental-quality-evaluation-B [environmental-quality-evaluation-B] of myself
            let signaling-humat-comfort-evaluation-B [comfort-evaluation-B] of myself
            let signaling-humat-prestige-evaluation-B [prestige-evaluation-B] of myself
            let signaling-humat-participation-evaluation-B [participation-evaluation-B] of myself
            
            ;get importances from signaling humat
            let signaling-humat-wellness-importance [wellness-importance] of myself
            let signaling-humat-environmental-quality-importance [environmental-quality-importance] of myself
            let signaling-humat-comfort-importance [comfort-importance] of myself
            let signaling-humat-prestige-importance [prestige-importance] of myself
            let signaling-humat-participation-importance [participation-importance] of myself
            
            ;calculate similarities for alternative A
            let similarity-wellness-importance-A Need-Similarity wellness-evaluation-A signaling-humat-wellness-evaluation-A wellness-importance signaling-humat-wellness-importance
            let similarity-environmental-quality-importance-A Need-Similarity environmental-quality-evaluation-A signaling-humat-environmental-quality-evaluation-A environmental-quality-importance signaling-humat-environmental-quality-importance
            let similarity-comfort-importance-A Need-Similarity comfort-evaluation-A signaling-humat-comfort-evaluation-A comfort-importance signaling-humat-comfort-importance
            let similarity-prestige-importance-A Need-Similarity prestige-evaluation-A signaling-humat-prestige-evaluation-A prestige-importance signaling-humat-prestige-importance
            let similarity-participation-importance-A Need-Similarity participation-evaluation-A signaling-humat-participation-evaluation-A participation-importance signaling-humat-participation-importance
            
            ;calculate similarities for alternative B
            let similarity-wellness-importance-B Need-Similarity wellness-evaluation-B signaling-humat-wellness-evaluation-B wellness-importance signaling-humat-wellness-importance
            let similarity-environmental-quality-importance-B Need-Similarity environmental-quality-evaluation-B signaling-humat-environmental-quality-evaluation-B environmental-quality-importance signaling-humat-environmental-quality-importance
            let similarity-comfort-importance-B Need-Similarity comfort-evaluation-B signaling-humat-comfort-evaluation-B comfort-importance signaling-humat-comfort-importance
            let similarity-prestige-importance-B Need-Similarity prestige-evaluation-B signaling-humat-prestige-evaluation-B prestige-importance signaling-humat-prestige-importance
            let similarity-participation-importance-B Need-Similarity participation-evaluation-B signaling-humat-participation-evaluation-B participation-importance signaling-humat-participation-importance
            
            ;get relative-aspiration
            let rel-aspiration adjacents-trust
            
            ; persuasion is a multiplication of need-similarity and relative-aspiration, and is not symmetric (needs different values for inquiring and signaling)
            let persuasion-wellness-A (similarity-wellness-importance-A * rel-aspiration) 
            let persuasion-environmental-quality-A (similarity-environmental-quality-importance-A * rel-aspiration)
            let persuasion-comfort-A (similarity-comfort-importance-A * rel-aspiration) 
            let persuasion-prestige-A (similarity-prestige-importance-A * rel-aspiration) 
            let persuasion-participation-A (similarity-participation-importance-A * rel-aspiration) 
            
            
            let persuasion-wellness-B (similarity-wellness-importance-B * rel-aspiration) 
            let persuasion-environmental-quality-B (similarity-environmental-quality-importance-B * rel-aspiration)
            let persuasion-comfort-B (similarity-comfort-importance-B * rel-aspiration) 
            let persuasion-prestige-B (similarity-prestige-importance-B * rel-aspiration) 
            let persuasion-participation-B (similarity-participation-importance-B * rel-aspiration) 
            
            ; seting new experiential and values satisfaction
            set wellness-satisfaction-A New-Need-Satisfaction wellness-satisfaction-A persuasion-wellness-A [wellness-satisfaction-A] of myself
            set environmental-quality-satisfaction-A New-Need-Satisfaction environmental-quality-satisfaction-A persuasion-environmental-quality-A [environmental-quality-satisfaction-A] of myself
            set comfort-satisfaction-A New-Need-Satisfaction comfort-satisfaction-A persuasion-comfort-A [comfort-satisfaction-A] of myself
            set prestige-satisfaction-A New-Need-Satisfaction prestige-satisfaction-A persuasion-prestige-A [prestige-satisfaction-A] of myself
            set participation-satisfaction-A New-Need-Satisfaction participation-satisfaction-A persuasion-participation-A [participation-satisfaction-A] of myself
            
            
            set wellness-satisfaction-B New-Need-Satisfaction wellness-satisfaction-B persuasion-wellness-B [wellness-satisfaction-B] of myself
            set environmental-quality-satisfaction-B New-Need-Satisfaction environmental-quality-satisfaction-B persuasion-environmental-quality-B [environmental-quality-satisfaction-B] of myself
            set comfort-satisfaction-B New-Need-Satisfaction comfort-satisfaction-B persuasion-comfort-B [comfort-satisfaction-B] of myself
            set prestige-satisfaction-B New-Need-Satisfaction prestige-satisfaction-B persuasion-prestige-B [prestige-satisfaction-B] of myself
            set participation-satisfaction-B New-Need-Satisfaction participation-satisfaction-B persuasion-participation-B [participation-satisfaction-B] of myself
            
            ;update behaviour decision
            Update-Evaluations
            Update-Dissonances
            Choose-Behaviour
            Update-Evaluations
            Update-Dissonances
            
            ;update link same-ba=?
            ask my-out-links[
              ifelse [behavior] of other-end = [behavior] of myself [set same-ba? 1][set same-ba? 0]
            ]
          ]
          ;update link same-ba?    
          ;update dissonances of signaling humat
          Update-Evaluations
          Update-Dissonances
          Choose-Behaviour
          Update-Evaluations
          Update-Dissonances
          
          ask my-out-links [
            ;update link same-ba?
            ifelse [behavior] of other-end = [behavior] of myself [set same-ba? 1][set same-ba? 0]
          ]
        ] 
        
      ]
    ]   
  ]
end

to Catastrophic-Event
  if month = 5 and year = 2010 and scenario3-event2 = 0 [;0.6
    Run-Strategy "Other Associations" "supporter" 0.6 "Local Media" ["all"]
  ]
  if month = 6 and year = 2010 and scenario3-event2 = 0 [
    Run-Strategy "Other Associations" "supporter" 0.6 "Local Media" ["all"]
  ]
  if month = 7 and year = 2010 and scenario3-event2 = 0 [
    Run-Strategy "Other Associations" "supporter" 0.6 "Local Media" ["all"]
  ]
end